name: Backend CI

on:
  push:
    branches: [ "main" ]
  pull_request:
    branches: [ "main" ]

jobs:
  build:
    runs-on: ubuntu-latest

    steps:
      # 1. Clonar el repo
      - name: Checkout code
        uses: actions/checkout@v3

      # 2. Configurar JDK 17
      - name: Set up JDK 17
        uses: actions/setup-java@v3
        with:
          java-version: '17'
          distribution: 'temurin'

      # 3. Cache de Gradle
      - name: Cache Gradle packages
        uses: actions/cache@v3
        with:
          path: |
            ~/.gradle/caches
            ~/.gradle/wrapper
          key: ${{ runner.os }}-gradle-${{ hashFiles('**/*.gradle*', '**/gradle-wrapper.properties') }}
          restore-keys: |
            ${{ runner.os }}-gradle-

      # 4. Dar permisos al wrapper de Gradle
      - name: Give Gradle wrapper permission
        run: chmod +x ./braintune-backend/gradlew

      # 5. Construir el JAR con ShadowJar + logs completos
      - name: Build ShadowJar with logs
        working-directory: ./braintune-backend
        run: ./gradlew clean shadowJar --no-daemon --info --stacktrace

      # 6. Verificar que el JAR exista y loguear
      - name: Check JAR existence
        working-directory: ./braintune-backend
        run: |
          if ls build/libs/*all.jar 1> /dev/null 2>&1; then
            echo "✅ JAR generado correctamente:"
            ls -l build/libs/
          else
            echo "❌ ERROR: JAR no se generó"
            exit 1
          fi

      # 7. Construir imagen Docker runtime-only
      - name: Build Docker image
        working-directory: ./braintune-backend
        run: docker build -t braintune-backend:latest .

      # 8. Probar la imagen Docker
      - name: Run Docker container (test)
        working-directory: ./braintune-backend
        run: docker run --name braintune-test --rm -d -p 8080:8080 braintune-backend:latest

      # 9. Log in a Docker Hub
      - name: Log in to Docker Hub
        uses: docker/login-action@v2
        with:
          username: ${{ secrets.DOCKER_USERNAME }}
          password: ${{ secrets.DOCKER_PASSWORD }}

      # 10. Tag y push de la imagen
      - name: Push Docker image
        working-directory: ./braintune-backend
        run: |
          docker tag braintune-backend:latest $DOCKER_USERNAME/braintune-backend:latest
          docker push $DOCKER_USERNAME/braintune-backend:latest
        env:
          DOCKER_USERNAME: ${{ secrets.DOCKER_USERNAME }}
